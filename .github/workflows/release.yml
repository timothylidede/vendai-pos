name: Build and Release VendAI POS

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write
  packages: write

jobs:
  build:
    name: Build ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - platform: Windows
            os: windows-latest
            build_script: "dist:win"
            artifact_path: "dist/*.exe"
            artifact_name: "VendAI-POS-Windows-Setup.exe"
        
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Install dependencies
      run: npm install --legacy-peer-deps

    - name: Build Next.js app
      run: npm run build

    - name: Build Electron app for ${{ matrix.platform }}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY || 'dummy-key' }}
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN || 'dummy-domain.firebaseapp.com' }}
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID || 'dummy-project' }}
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET || 'dummy-project.appspot.com' }}
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || '123456789' }}
        NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID || '1:123456789:web:dummy' }}
        # Apple notarization (removed - Windows only)
      run: npm run ${{ matrix.build_script }}

    - name: Debug - Show what was built
      run: |
        echo "Contents of dist directory:"
        if (Test-Path "dist") { 
          Get-ChildItem dist -Recurse | Format-Table Name, Length, FullName
          echo "Looking specifically for .exe files:"
          Get-ChildItem dist -Recurse -Filter "*.exe" | Format-Table Name, Length, FullName
        } else { 
          echo "No dist directory found" 
        }
      shell: powershell
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform }}-build
        path: |
          dist/**/*.exe
          dist/**/*.msi
          dist/*.exe
          dist/*.msi
        retention-days: 5

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out Git repository
      uses: actions/checkout@v4
      
    - name: Download all build artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
        
    - name: Display artifacts structure (Debug)
      run: |
        echo "Downloaded artifacts:"
        find artifacts/ -type f -name "*.exe" || echo "No executables found"
        ls -la artifacts/ || echo "No artifacts directory"
        
    - name: Prepare release assets
      run: |
        mkdir -p release-assets/
        
        echo "Debug: Searching for executable files in artifacts..."
        find artifacts/ -type f -name "*.exe" | while read exe_file; do
          echo "Found exe file: $exe_file"
        done
        
        echo "Debug: All files in artifacts directory:"
        find artifacts/ -type f | head -10
        
        # Find and rename Windows executable with better error handling
        EXE_FILE=$(find artifacts/ -type f -name "*.exe" | head -1)
        if [ -n "$EXE_FILE" ] && [ -f "$EXE_FILE" ]; then
          echo "Found Windows exe: $EXE_FILE"
          cp "$EXE_FILE" "release-assets/VendAI-POS-Windows-Setup.exe"
          echo "Successfully copied to release-assets/"
        else
          echo "ERROR: No .exe files found in artifacts"
          echo "Available files:"
          find artifacts/ -type f -name "*" | head -20
          exit 1
        fi
        
        echo "Release assets prepared:"
        ls -la release-assets/
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: release-assets/*
        generate_release_notes: true
        draft: false
        prerelease: false
        name: "VendAI POS ${{ github.ref_name }}"
        body: |
          ## ðŸš€ VendAI POS ${{ github.ref_name }}
          
          ### Download Instructions:
          
          **Windows Users:**
          - Download `VendAI-POS-Windows-Setup.exe`
          - Run the installer and follow the setup wizard
          - Windows may show a security warning - click "More info" â†’ "Run anyway"
          
          ### What's New:
          - Latest features and bug fixes
          - Performance improvements
          - Enhanced user interface
          
          ---
          *Built automatically with GitHub Actions*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}